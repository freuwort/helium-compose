volumes:
  mysql-data:
  valkey-data:
  certs:
  vhostd:
  html:

networks:
  helium:
    driver: bridge

services:
  mysql:
    image: mariadb
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - helium
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: valkey/valkey:alpine
    volumes:
      - valkey-data:/data
    networks:
      - helium
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  backend:
    image: helium-backend
    env_file: .env
    environment:
      - VIRTUAL_HOST=${APP_DOMAIN}
      - LETSENCRYPT_HOST=${APP_DOMAIN}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./backend-storage:/var/www/html/storage
    networks:
      - helium
    depends_on:
      - mysql
      - redis

  backend-queue:
    image: helium-backend
    env_file: .env
    entrypoint: ["php", "/var/www/html/artisan", "queue:work", "--tries=3"]
    volumes:
      - ./backend-storage:/var/www/html/storage
    networks:
      - helium
    depends_on:
      - backend

  frontend:
    image: helium-frontend
    env_file: .env
    environment:
      - VIRTUAL_HOST=${FRONTEND_DOMAIN}
      - LETSENCRYPT_HOST=${FRONTEND_DOMAIN}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    networks:
      - helium
    depends_on:
      - backend

  nginx-proxy:
    image: jwilder/nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    networks:
      - helium

  acme-companion:
    image: nginxproxy/acme-companion
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    networks:
      - helium
    depends_on:
      - nginx-proxy